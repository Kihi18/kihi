{"version":3,"sources":["main.js"],"names":["fireWork","setTimeout","draw","ctx","canvas","getContext","w","document","body","clientWidth","h","clientHeight","width","height","nodes","requestAnimationFrame","globalCompositeOperation","fillStyle","fillRect","node","l","length","drawNode","dead","splice","rand","push","makeNode","Math","random","point","children","beginPath","color","arc","x","y","PI2","fill","closePath","updatePoint","count","radius","dx","dy","c","sqrt","velocity","rad","PI","ttt","max","min","partCount","kof","r","cos","sin","$","ready"],"mappings":"AAAA,MAAMA,SAAW,KACbC,YAAW,KACPC,GAAM,GACP,KACH,IAAIC,EAAMC,OAAOC,WAAW,MACxBC,EAAIC,SAASC,KAAKC,YAClBC,EAAIH,SAASC,KAAKG,aACtBP,OAAOQ,MAAQN,EACfF,OAAOS,OAASH,EAEhB,IAAII,EAAQ,GAGZ,SAASZ,IACLa,sBAAsBb,GAEtBC,EAAIa,yBAA2B,kBAC/Bb,EAAIc,UAAY,qBAChBd,EAAIe,SAAS,EAAG,EAAGZ,EAAGI,GAEtBP,EAAIa,yBAA2B,UAG/B,IADA,IAAsBG,EAAlBC,EAAIN,EAAMO,OACPD,KAEHE,EADAH,EAAOL,EAAMM,IAETD,EAAKI,MACLT,EAAMU,OAAOJ,EAAG,GAIxB,GAAIN,EAAMO,OAAS,GAEf,IADAD,EAAiB,EAAbK,EAAK,EAAG,GACLL,KACHN,EAAMY,KAAKC,EACPC,KAAKC,SAAWvB,EAAI,EACpBsB,KAAKC,SAAWnB,EAAI,EACpB,GACA,QAAyB,EAAfe,EAAK,IAAK,IAAU,eAC9B,KAIhB,CAEA,SAASH,EAASH,GAId,IAHA,IACMW,EADFV,EAAID,EAAKY,SAASV,OAGfD,KACHU,EAAQX,EAAKY,SAASX,GACtBjB,EAAI6B,YACJ7B,EAAIc,UAAYa,EAAMG,MACtB9B,EAAI+B,IAAIJ,EAAMK,EAAGL,EAAMM,EAAG,EAAG,EAAGC,GAChClC,EAAImC,OACJnC,EAAIoC,YACJC,EAAYV,GACRA,EAAMP,OACNJ,EAAKY,SAASP,OAAOJ,EAAG,GACpBD,EAAKsB,MAAQ,IACb3B,EAAMY,KAAKC,EACPG,EAAMK,EACNL,EAAMM,EACQ,GAAdjB,EAAKuB,OACLvB,EAAKc,MACJd,EAAKsB,MAAQ,GAAM,KAK/BtB,EAAKY,SAASV,SACfF,EAAKI,MAAO,EAEpB,CAEA,SAASiB,EAAYV,GACjB,IAAIa,EAAKb,EAAMK,EAAIL,EAAMa,GACrBC,EAAKd,EAAMM,EAAIN,EAAMc,GACrBC,EAAIjB,KAAKkB,KAAKH,EAAKA,EAAKC,EAAKA,GACjCd,EAAMP,KAAOsB,EAAI,EACjBf,EAAMK,GAAKQ,EAAKb,EAAMiB,SACtBjB,EAAMM,GAAKQ,EAAKd,EAAMiB,QAC1B,CAEA,MAAMC,EAAMpB,KAAKqB,GAAK,IAChBZ,EAAgB,EAAVT,KAAKqB,GACjB,IAAIC,EAAM,EAEV,SAASzB,EAAK0B,EAAKC,GAEf,OADAA,EAAMA,GAAO,EACNxB,KAAKC,UAAYsB,EAAMC,GAAOA,CACzC,CAEA,SAASzB,EAASQ,EAAGC,EAAGM,EAAQT,EAAOoB,GAEnCX,EAASA,GAAU,EAUnB,IARA,IAGMY,EACAC,EAJFd,EADJY,EAAYA,GAAa,EAGrBtB,EAAW,GAMRsB,KACHC,EAAM,IAAM1B,KAAKC,SAAW,EAC5B0B,EAAIb,EAASd,KAAKC,SAAW,EAC7BE,EAASL,KAAK,CACVS,EAAGA,EACHC,EAAGA,EACHO,GAAIR,EAAIoB,EAAI3B,KAAK4B,IAAIN,EAAMI,EAAMN,GACjCJ,GAAIR,EAAImB,EAAI3B,KAAK6B,IAAIP,EAAMI,EAAMN,GACjCf,MAAOA,EACPc,SAAUtB,EAAK,EAAG,OAEtByB,IAGJ,MAAO,CACHR,OAAQA,EACRD,MAAOA,EACPR,MAAOA,EACPE,EAAGA,EACHC,EAAGA,EACHL,SAAUA,EAElB,GAGJ2B,EAAEnD,UAAUoD,OAAM,WACd3D,UACJ","file":"main.min.js","sourcesContent":["const fireWork = () => {\r\n    setTimeout(() => {\r\n        draw();\r\n    }, 200);\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var w = document.body.clientWidth;\r\n    var h = document.body.clientHeight;\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n\r\n    var nodes = [];\r\n\r\n\r\n    function draw() {\r\n        requestAnimationFrame(draw);\r\n\r\n        ctx.globalCompositeOperation = \"destination-out\";\r\n        ctx.fillStyle = \"rgba(0, 0, 0, .08)\";\r\n        ctx.fillRect(0, 0, w, h);\r\n\r\n        ctx.globalCompositeOperation = \"lighter\";\r\n\r\n        var l = nodes.length, node;\r\n        while (l--) {\r\n            node = nodes[l];\r\n            drawNode(node);\r\n            if (node.dead) {\r\n                nodes.splice(l, 1);\r\n            }\r\n        }\r\n\r\n        if (nodes.length < 10) {\r\n            l = rand(4, 1) | 0;\r\n            while (l--) {\r\n                nodes.push(makeNode(\r\n                    Math.random() * w | 0,\r\n                    Math.random() * h | 0,\r\n                    40,\r\n                    \"hsl(\" + (rand(300, 0) | 0) + \", 100%, 50%)\",\r\n                    100\r\n                ));\r\n            }\r\n        }\r\n    }\r\n\r\n    function drawNode(node) {\r\n        var l = node.children.length\r\n            , point\r\n            ;\r\n        while (l--) {\r\n            point = node.children[l];\r\n            ctx.beginPath();\r\n            ctx.fillStyle = point.color;\r\n            ctx.arc(point.x, point.y, 1, 0, PI2);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n            updatePoint(point);\r\n            if (point.dead) {\r\n                node.children.splice(l, 1);\r\n                if (node.count > 20) {\r\n                    nodes.push(makeNode(\r\n                        point.x,\r\n                        point.y,\r\n                        node.radius * 10,\r\n                        node.color,\r\n                        (node.count / 10) | 0\r\n                    ))\r\n                }\r\n            }\r\n        }\r\n        if (!node.children.length) {\r\n            node.dead = true;\r\n        }\r\n    }\r\n\r\n    function updatePoint(point) {\r\n        var dx = point.x - point.dx;\r\n        var dy = point.y - point.dy;\r\n        var c = Math.sqrt(dx * dx + dy * dy);\r\n        point.dead = c < 1;\r\n        point.x -= dx * point.velocity;\r\n        point.y -= dy * point.velocity;\r\n    }\r\n\r\n    const rad = Math.PI / 180;\r\n    const PI2 = Math.PI * 2;\r\n    var ttt = 0;\r\n\r\n    function rand(max, min) {\r\n        min = min || 0;\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n\r\n    function makeNode(x, y, radius, color, partCount) {\r\n\r\n        radius = radius || 0;\r\n        partCount = partCount || 0;\r\n        var count = partCount;\r\n\r\n        var children = []\r\n            , kof\r\n            , r\r\n            ;\r\n\r\n\r\n        while (partCount--) {\r\n            kof = 100 * Math.random() | 0;\r\n            r = radius * Math.random() | 0;\r\n            children.push({\r\n                x: x,\r\n                y: y,\r\n                dx: x + r * Math.cos(ttt * kof * rad),\r\n                dy: y + r * Math.sin(ttt * kof * rad),\r\n                color: color,\r\n                velocity: rand(1, 0.05)\r\n            });\r\n            ttt++\r\n        }\r\n\r\n        return {\r\n            radius: radius,\r\n            count: count,\r\n            color: color,\r\n            x: x,\r\n            y: y,\r\n            children: children\r\n        }\r\n    }\r\n\r\n}\r\n$(document).ready(function () {\r\n    fireWork();\r\n});\r\n"]}